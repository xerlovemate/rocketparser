from aiogram import Router, Bot, F
from aiogram.filters import CommandStart
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile, CallbackQuery
from sqlalchemy.future import select

import config
import database.requests as rq
from database.db import async_session, User

router = Router()
router.message.filter(F.chat.type == 'private')
API_TOKEN = config.TOKEN

bot = Bot(token=API_TOKEN)


# ================== /start handler ==================
@router.message(CommandStart())
async def cmd_start(message: Message):
    text = (f'<b>ü•∑ ID: <code>{message.from_user.id}</code></b>\n\n'
            f'<b>–ë–∞–ª–∞–Ω—Å: {await rq.get_balance_by_tg_id(message.from_user.id)} USDT</b>\n'
            f'<b>–†–µ—Ñ–µ—Ä–∞–ª–æ–≤: {await rq.get_refferal_count_by_tg_id(message.from_user.id)}</b>\n\n'
            f'<b>–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤ –Ω–µ–π <a href="https://t.me/rocketparsernews">–ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å</a></b>')

    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="ü™ê –ü–∞—Ä—Å–∏—Ç—å", callback_data="parse_menu")],
        [InlineKeyboardButton(text="üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop")],
        [InlineKeyboardButton(text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data='depozit')],
        [InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data="params")],
        [InlineKeyboardButton(text='–ü–æ–º–æ—â—å', callback_data='help')]
    ])

    home_photo = FSInputFile(path='media/main_photo.jpg')

    promo_code = None
    if message.text and len(message.text.split()) > 1:
        promo_code = message.text.split()[1]

    async with async_session() as session:
        result = await session.execute(select(User).where(User.tg_id == message.from_user.id))
        user = result.scalar_one_or_none()

        is_self_ref = promo_code == str(message.from_user.id)

        if user:
            # –ï—Å–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –µ—Å—Ç—å, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º —Å–µ–±–µ –Ω–µ —Ä–µ—Ñ–µ—Ä–∞–ª, –∏ –ø—Ä–æ–º–æ –µ—â—ë –Ω–µ –∑–∞–ø–∏—Å–∞–Ω
            if promo_code and not is_self_ref and not user.promocode:
                user.promocode = promo_code

                # –£–≤–µ–ª–∏—á–∏–º —Å—á—ë—Ç—á–∏–∫ —É –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
                result_ref = await session.execute(select(User).where(User.tg_id == int(promo_code)))
                ref_user = result_ref.scalar_one_or_none()
                if ref_user:
                    ref_user.refferal_count += 1

                await session.commit()
        else:
            new_user = User(
                tg_id=message.from_user.id,
                tg_username=message.from_user.username or "Unknown",
                promocode=None if is_self_ref else promo_code
            )
            session.add(new_user)

            if promo_code and not is_self_ref:
                result_ref = await session.execute(select(User).where(User.tg_id == int(promo_code)))
                ref_user = result_ref.scalar_one_or_none()
                if ref_user:
                    ref_user.refferal_count += 1

            await session.commit()

    await message.answer_photo(photo=home_photo,
                               caption=text,
                               reply_markup=markup,
                               parse_mode="HTML")


@router.callback_query(F.data == 'back_to_main_menu')
async def back_to_main_menu(callback: CallbackQuery):
    text = (f'<b>ü•∑ ID: <code>{callback.from_user.id}</code></b>\n\n'
            f'<b>–ë–∞–ª–∞–Ω—Å: {await rq.get_balance_by_tg_id(callback.from_user.id)} USDT</b>\n'
            f'<b>–†–µ—Ñ–µ—Ä–∞–ª–æ–≤: {await rq.get_refferal_count_by_tg_id(callback.from_user.id)}</b>\n\n'
            f'<b>–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤ –Ω–µ–π <a href="https://t.me/rocketparsernews">–ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å</a></b>')

    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="ü™ê –ü–∞—Ä—Å–∏—Ç—å", callback_data="parse_menu")],
        [InlineKeyboardButton(text="üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop")],
        [InlineKeyboardButton(text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data='depozit')],
        [InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data="params")],
        [InlineKeyboardButton(text='–ü–æ–º–æ—â—å', callback_data='help')]
    ])

    await callback.message.edit_caption(
        caption=text,
        parse_mode='HTML',
        reply_markup=markup
    )